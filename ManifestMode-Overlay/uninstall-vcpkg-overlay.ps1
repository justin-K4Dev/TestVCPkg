<#=================================================================================================
  uninstall-vcpkg-overlay.ps1 (Windows PowerShell 7.2+)
  - Scripts\cleanup-vcpkg-manifest.ps1 호출 및 파라미터 설정
  - 기본 동작: vcpkg_installed 산출물 제거 + buildtrees/packages 정리, BinaryCache 유지
=================================================================================================#>

$ErrorActionPreference = "Stop"

$projectRoot = $PSScriptRoot

# cleanup 스크립트 경로 확인 (현재 파일 기준)
$cleanupScript = Join-Path $projectRoot "..\Scripts\cleanup-vcpkg-manifest.ps1"
if (-not (Test-Path $cleanupScript)) {
	throw "cleanup script not found: $cleanupScript"
}

Set-ExecutionPolicy -Scope Process Bypass -Force

# -----------------------------------------------------------------------------------------------
# 1) 기본값으로 정리
#   - vcpkg_installed 산출물 제거
#   - buildtrees/packages 제거
#   - BinaryCache 유지
# -----------------------------------------------------------------------------------------------
& $cleanupScript `
	-ProjectRoot $projectRoot

# -----------------------------------------------------------------------------------------------
# 2) DryRun: 실제 삭제 없이 대상만 출력(무엇이 지워질지 사전 검토)
# -----------------------------------------------------------------------------------------------
& $cleanupScript `
	-ProjectRoot $projectRoot `
	-DryRun:$true

# -----------------------------------------------------------------------------------------------
# 3) 여러 트립렛을 한 번에 정리
#   - 사용 중인 트립렛들 명시
# -----------------------------------------------------------------------------------------------
& $cleanupScript `
	-ProjectRoot $projectRoot `
	-Triplets @("x64-windows-static")

# -----------------------------------------------------------------------------------------------
# 4) Binary cache까지 모두 정리(다운로드/빌드 산출 캐시 포함)
#   - 캐시까지 지우면 추후 재설치 시 빌드/다운로드가 다시 일어납니다.
#   - 프롬프트 없이 진행하려면 -Force 추가
# -----------------------------------------------------------------------------------------------
& $cleanupScript `
	-ProjectRoot $projectRoot `
	-PurgeBinaryCache:$true `
	-Force

# -----------------------------------------------------------------------------------------------
# 5) 사용자 경로 지정(다른 프로젝트 루트/캐시 경로로 실행)
#   - ProjectRoot: vcpkg.json 이 있는 폴더
#   - BinaryCachePath: install 스크립트의 files,<path>,readwrite 와 동일하게 맞추면 일관성 ↑
# -----------------------------------------------------------------------------------------------
& $cleanupScript `
	-ProjectRoot $projectRoot `
	-BinaryCachePath "$projectRoot\vcpkg-BinaryCache"

# -----------------------------------------------------------------------------------------------
# 6) 강제 실행(삭제 확인 프롬프트 없이 바로 삭제)
#   - CI나 자동화 스텝에 적합
# -----------------------------------------------------------------------------------------------
& $cleanupScript `
	-ProjectRoot $projectRoot `
	-Force

# -----------------------------------------------------------------------------------------------
# 7) buildtrees/packages 는 보존하고 설치 산출물만 제거
#   - 캐시 및 빌드트리/패키지 보존 → 재설치 속도 유리
# -----------------------------------------------------------------------------------------------
& $cleanupScript `
	-ProjectRoot $projectRoot `
	-PurgeBuildTrees:$false `
	-PurgePackages:$false

# -----------------------------------------------------------------------------------------------
# 8) 특정 트립렛만 깨끗하게 제거 + 바이너리 캐시 유지(기본)
# -----------------------------------------------------------------------------------------------
& $cleanupScript `
	-ProjectRoot $projectRoot `
	-Triplets @("x64-windows-static-mt")

# -----------------------------------------------------------------------------------------------
# 9) 최대한 청소(설치 산출물 + buildtrees + packages + Binary cache 전부)
#   - 디스크 공간 회수 목적
# -----------------------------------------------------------------------------------------------
& $cleanupScript `
	-ProjectRoot $projectRoot `
	-PurgeBuildTrees:$true `
	-PurgePackages:$true `
	-PurgeBinaryCache:$true `
	-Force

# -----------------------------------------------------------------------------------------------
# 10) 먼저 드라이런으로 확인 → 확정되면 실제 실행
# -----------------------------------------------------------------------------------------------
& $cleanupScript `
	-ProjectRoot $projectRoot `
	-DryRun:$true

& $cleanupScript `
	-ProjectRoot $projectRoot `
	-Force
